#!/usr/bin/env node
'use strict';
/** * Require dependencies * */
const program = require('commander'),
    chalk = require("chalk"),
    pkg = require('./package.json'),
    externalApi = require('./externalApi'),
    utils = require('./utils'),
    game = require('./game');
/** * list function definition * */
let def = (word) => {
    return new Promise(function(resolve, reject) {
        externalApi.hitApi('definitions', word).then(function (result) {
            console.log(chalk.blue.bold(`Definition(s) of ${chalk.green(utils.capitalizeFirstLetter(word))} -\n`));
            let definitions = utils.parseDefinitions(result);
            console.log(definitions);
            resolve();
        });
    });
};
let syn = (word) => {
    return new Promise(function(resolve, reject) {
        externalApi.hitApi('relatedWords', word).then(function (result) {
            console.log(chalk.blue.bold(`Synonym(s) of ${chalk.green(utils.capitalizeFirstLetter(word))} -\n`));
            let synonym = utils.parseSynonym(result);
            console.log(synonym);
            resolve();
        });
    });
};
let ant = (word) => {
    return new Promise(function(resolve, reject) {
        externalApi.hitApi('relatedWords', word).then(function (result) {
            console.log(chalk.blue.bold(`Antonym(s) of ${chalk.green(utils.capitalizeFirstLetter(word))} -\n`));
            let antonym = utils.parseAntonym(result);
            console.log(antonym);
            resolve();
        });
    });
};
let ex = (word) => {
    return new Promise(function(resolve, reject) {
        externalApi.hitApi('examples', word).then(function (result) {
            console.log(chalk.blue.bold(`Example(s) of ${chalk.green(utils.capitalizeFirstLetter(word))} -\n`));
            let examples = utils.parseExamples(result);
            console.log(examples);
            resolve();
        });
    });
};
let dict = async (word) => {
    await def(word);
    await syn(word);
    await ant(word);
    await ex(word);
};
let random = () => {
    externalApi.hitApi('random').then(function (result) {
        console.log('Word of the Day is', chalk.green.bold(utils.capitalizeFirstLetter(result.word)));
        dict(result.word)
    });
};

program.version(pkg.version).command('def <word>').action(def);
program.version(pkg.version).command('syn <word>').action(syn);
program.version(pkg.version).command('ant <word>').action(ant);
program.version(pkg.version).command('ex <word>').action(ex);
program.version(pkg.version).command('dict <word>').action(dict);
program.version(pkg.version).command('play').action(game.initiateGame);

program.parse(process.argv);
if (program.args.length === 0)
    random();
else if (program.args.length === 1 && !program.rawArgs.includes('play')) {
    dict(program.rawArgs[2].toString());
}
